!function(){"use strict";function a(){return b+=1}var b=2,c=React.createClass({displayName:"Task List",propTypes:{addTask:React.PropTypes["function"],deleteTask:React.PropTypes["function"],tasks:React.PropTypes.array},render:function(){var a=this,b=_.map(this.props.tasks,function(b){return React.createElement("li",null,b.text,React.createElement("button",{"data-task-id":b.id,onClick:a.props.deleteTask,ref:"delTask"},"X"))});return React.createElement("ul",{className:"task-list"},b,React.createElement(d,{addTask:this.props.addTask,ref:"taskForm"}))}}),d=React.createClass({displayName:"Task Form",propTypes:{addTask:React.PropTypes["function"]},render:function(){return React.createElement("li",null,React.createElement("form",{id:"task=form",onSubmit:this.props.addTask},React.createElement("input",{placeholder:"New Task",ref:"newTask",type:"text"}),React.createElement("button",{type:"submit"},"Save")))}}),e=React.createClass({displayName:"Main Container",getInitialState:function(){var a=[{id:1,text:"Task 1"},{id:2,text:"Task 2"}];return{list:a}},addTask:function(b){var c=this.state.list,d=this.refs.taskList.refs.taskForm.refs.newTask,e=React.findDOMNode(d);b.preventDefault(),c.push({id:a(),text:e.value}),e.value="",this.setState({list:c})},deleteTask:function(a){var b=this.state.list,c=a.target;a.preventDefault(),b=_.filter(b,function(a){return a.id!==parseInt(c.dataset.taskId,10)}),this.setState({list:b})},render:function(){return React.createElement("div",null,React.createElement("h1",{className:"main-header"},"To Do List"),React.createElement(c,{addTask:this.addTask,deleteTask:this.deleteTask,ref:"taskList",tasks:this.state.list}))}});React.render(React.createElement(e,null),document.getElementById("main-container"))}();